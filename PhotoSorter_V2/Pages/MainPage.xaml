<Page
    x:Class="PhotoSorter_V2.Pages.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:custom="using:CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    DataContext="{Binding Path=MainPageViewModel, Source={StaticResource ViewModelLocator}}"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <CommandBar Grid.Row="0"
                    Name="TopCommandoBar">
            <CommandBar.Content>
                <StackPanel Orientation="Horizontal">

                    <AppBarButton Icon="Import" 
                                  x:Uid="LabelImport" 
                                  Command="{Binding ImportCommand}" 
                                  IsCompact="{Binding IsOpen, ElementName=TopCommandoBar, Converter={StaticResource InvertBooleanConverter}}" />

                    <AppBarButton Icon="Save" 
                                  x:Uid="LabelSave" 
                                  Command="{Binding SaveCommand}" 
                                  IsCompact="{Binding IsOpen, ElementName=TopCommandoBar, Converter={StaticResource InvertBooleanConverter}}">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="S" 
                                                 Modifiers="Control"/>
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>

                    <AppBarButton Icon="Folder" 
                                  x:Uid="LabelSave" 
                                  Command="{Binding OpenCommand}" 
                                  IsCompact="{Binding IsOpen, ElementName=TopCommandoBar, Converter={StaticResource InvertBooleanConverter}}" />

                    <AppBarSeparator />

                    <!-- IPhotoModel doesn't contain Command, Selected Photo is of type PhotoViewModel, which contains the Command -->
                    <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                    <AppBarButton Icon="Edit" 
                                  x:Uid="LabelEdit" 
                                  Command="{Binding SelectedPhoto.EditCommand}" 
                                  IsCompact="{Binding IsOpen, ElementName=TopCommandoBar, Converter={StaticResource InvertBooleanConverter}}" />

                    <AppBarButton Icon="Rotate" 
                                  x:Uid="LabelRotate" 
                                  Command="{Binding RotateCommand}" 
                                  IsCompact="{Binding IsOpen, ElementName=TopCommandoBar, Converter={StaticResource InvertBooleanConverter}}" />

                    <AppBarButton Icon="Delete" 
                                  x:Uid="LabelDelete" 
                                  Command="{Binding DeleteCommand}" 
                                  CommandParameter="{Binding SelectedPhoto}"
                                  IsCompact="{Binding IsOpen, ElementName=TopCommandoBar, Converter={StaticResource InvertBooleanConverter}}" />

                </StackPanel>
            </CommandBar.Content>

            <AppBarButton Icon="Switch"
                          x:Uid="LabelCompareImages"
                          Command="{Binding CompareCommand}"/>

            <AppBarToggleButton Icon="AlignCenter"
                                x:Uid="LabelShowDescription"
                                IsChecked="{Binding ShowDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <AppBarToggleButton Icon="PreviewLink"
                                x:Uid="LabelShowDetails"
                                IsChecked="{Binding ShowDetails, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <AppBarToggleButton Icon="List" 
                                x:Uid="LabelRedundantPhotos" 
                                IsChecked="{Binding ShowRedundantPhotos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <AppBarToggleButton Icon="Sort" 
                                Name="OrderBy"
                                Command="{Binding OrderByCommand}"
                                CommandParameter="{Binding ElementName=OrderBy, Path=IsChecked}"/>

            <AppBarSeparator />

            <AppBarButton Icon="Setting" 
                          x:Uid="LabelSettings" 
                          Command="{Binding SettingsCommand}" />

        </CommandBar>

        <SplitView Grid.Row="1" 
                   Grid.Column="0"
                   Margin="5"
                   IsPaneOpen="{Binding ShowRedundantPhotos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                   DisplayMode="Inline"
                   OpenPaneLength="400"
                   PanePlacement="Right">

            <SplitView.Pane>
                <custom:RedundantPhotos x:Uid="HeaderRedundantPhotos"
                                        DeleteItemCommand="{Binding DeleteCommand}"
                                        ImageRotation="{Binding SelectedPhoto.Rotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedRedundantImage="{Binding SelectedPhoto.SelectedRedundantPhoto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        RedundantPhotosCollection="{Binding SelectedPhoto.RedundantPhotos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </SplitView.Pane>

            <custom:FlipViewWithPageIndicator x:Uid="FlipViewWithPageIndicator"
                                              ImageRotation="{Binding SelectedPhoto.Rotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              PhotoName="{Binding SelectedPhoto.ImageName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedImage="{Binding SelectedPhoto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Images="{Binding Images, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </SplitView>

        <CommandBar Grid.Row="2" 
                    Grid.Column="0" 
                    Grid.ColumnSpan="2"
                    DefaultLabelPosition="Right" 
                    OverflowButtonVisibility="Collapsed">

            <CommandBar.Content>
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <custom:ProgressbarWithText Value="80" 
                                                Width="300" 
                                                Height="100" 
                                                TextMargin="120 10"/>
                </Grid>
            </CommandBar.Content>
        </CommandBar>
    </Grid>
</Page>
